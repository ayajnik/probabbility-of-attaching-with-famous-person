# -*- coding: utf-8 -*-
"""word2vec+hypothesis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GYPp0PsQhca31cPObs3dj_Qq0aQXKxpg
"""

!pip install gensim

#importing libraries
import os
import numpy as np
import pandas as pd
import nltk
import gensim
from gensim import corpora, models, similarities
print('\n')
print('Libraries Imported.')
print('\n')

df = str(pd.read_csv('word2vec.csv'));
print('\n')
print('File Uploaded.')
print('\n')
print(df.head(5))
#a = df.head(5)
#print(a)
#b = df.tail(5)
#print('\n')
#print(b)

#setting up the corpus
#corpus = a + b
#print(corpus.head(5))

nltk.download('punkt')

#tokenizing
corp_tok = nltk.word_tokenize(df)

#model making
model = gensim.models.Word2Vec([corp_tok], min_count=1, size = 1)

#saving the model
model.save('testmodel')

model = gensim.models.Word2Vec.load('testmodel')

model.train([["speed", "internet"]], total_examples=1, epochs=1)

model.most_similar(['Internet'])

vocabulary = list(model.wv.vocab)
#print(vocabulary)
e = list(model.wv.index2entity[:20])
e
f=list(model['Internet'])
g = list(model['commission'])
h = list(model['Wheeler'])
i = list(model['F.C.C'])
j = list(model['sentences'])
k = f+g+h+i+j
k

def prob(m,a):
  try:
    if m<len(a):
      print("You have qualified the conditions. The answer that you are seeking is:")
      xy = sorted(a,reverse=True)
      
      b = xy[0:m+1]
      print (b)
    else:
      
      if m == len(a):
        print ("You are not putting the right option. The value has to be less than the value of the length of the original list.")
      if m > len(a):
        print ("You have put an invalid option. The value has to be less than the value of the length of the original list.")
    y = max(b)
    x = sum(b)
    b.sort()
    length = len(b)
    second_largest = b[length-2]
    third_largest = b[length-3]
      
    a = y/x
    print ("The probability of attaching to the most famous point is,", a)
    if a<0.45:
      print("The probability is too less to rely on that data point, so we choose the second largest data point.")
      c = second_largest/x
      print ("The probability of attaching to the second most famous point is,", c)
      if c<0.45:
             print("The probability is too less to rely on that data point, so we choose the third largest data point.")
             dc = third_largest/x
             print ("The probability of attaching to the third most famous point is,", dc)

             
      
  except:
      print ("There can be some problem in the new section of the code. Please check them.")

parameter_1 = int(input("Please enter a subset from the inital list:"))
#parameter_2 = [21,23,123,3,34,34,34455555,56]
result_1 = prob(parameter_1,k)
print(result_1)

